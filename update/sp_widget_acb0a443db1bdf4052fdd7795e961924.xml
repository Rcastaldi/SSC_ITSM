<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope, spUtil, $http, $element, $window, $location, $rootScope, $timeout) {
  /* widget controller */
  var c = this;
	$scope.orderField = "number";
	$scope.data.flagToServerScriptToUpdateMiType = false;
	$scope.data.UpdateMiType_inc = null;
	$scope.data.UpdateMiType_newVal = null;
	


/*	//UI to watch the data tables and update on change
	spUtil.recordWatch($scope, "incident", "", function(name, data) {
		spUtil.update($scope);		
	});
	
	$scope.edit = function(instance) {
		$scope.editingRecord = angular.copy(instance);
	}
	
	$scope.reset = function() {
		$scope.editingRecord = null;
	}
	
	$scope.save = function() {
		$scope.writeIncident($scope.editingRecord.sys_id,
												{'u_mi_type':$scope.editingRecord.u_mi_type});
		$scope.reset();
	}
	
	$scope.writeIncident = function(sys_id, data) {
		$http({
			method: 'PUT',
			url:'api/now/table/incident/' + sys_id,
			headers: {'Content-Type' : 'application/json'},
			data: data
		});
	};
	*/
	
	$scope.$on("field.change", function(evt, parms) {
	if (parms.field.name == 'mi_type_select'){
	//$scope.data.groups = parms.newValue; 
	//shared.selstartdate = c.data.selstartdate;
	//shared.selenddate = c.data.selenddate; 
	//shared.groups = parms.newValue; 
	console.log(evt);
	console.log(parms);
	// $scope.server.update();
	}
	});
	
$scope.saveMitype = function(inc_sys_id,newVal) {
$scope.data.flagToServerScriptToUpdateMiType = true;
$scope.data.UpdateMiType_inc = inc_sys_id;
$scope.data.UpdateMiType_newVal = newVal;
c.server.update();
};
	
	
	
	$scope.changeSort = function(field) {
		if ($scope.orderField == field) {
			  $scope.orderReverse = !$scope.orderReverse;
		} else {
			$scope.orderField = field;
		}
	}
						 
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.MyTable {
  border-collapse: collapse;
  width: 100%;
  border: 3px grey;
}

tr {
  background-color: grey; 
  color:black; 
  font-size:12px; 
  padding: 1px; 
}

td, th {
  border: 1px solid black;
  padding: 2px;        
}

th {
  font: arial ;
  background-color:grey;

}

.omi_th {
  color:red;
  background-color:white;
  font-family: "Arial","sans-serif";
  font-size: 15px;
  font-weight: bold;
  text-align: left;
}

.omi_td {
  background-color:#e6b0aa;
  text-align: center;
}

.rmi_th {
  color:#984807;
  background-color:white;
  font-family: "Arial","sans-serif";
  font-size: 15px;
  font-weight: bold;
  text-align: left;
}

.rmi_td {
  background-color:#f9e79f;
  text-align: center;
}

.qmi_th {
  color:#1F497D;
  background-color:white;
  font-family: "Arial","sans-serif";
  font-size: 15px;
  font-weight: bold;
}

.qmi_td {
  background-color: white;

}

.pmi_th {
  color:brown;
  background-color:white;
  font-family: Arial;
  font-size: 15px;
  font-weight: bold;
  text-align: left;
}

.pmi_td {
  background-color: #d7bde2;
  text-align: center;
}

 .sub_text {
  color:black;
  font-size:10px;
 }

.dropdown{
  text-align: center;
}

.dropdown option:checked {
  color: red;
  background: yellow;
}
.dropdown option:not(:checked)  {
  color: red;
  background: pink;
}
.dropdown option:active  {
  color: blue;
  background: black;
}

.cardfooter{ 
  border-top: 1px black;
  border-bottom: 1px solid black; 
  padding: 10px 0 10px; 
  color: black;
  width: 100%
    font-family: Arial;
  font-size: 10px;
  text-align:left;
} 

.sp-editable-field .popover {
  font-weight: normal;
  max-width: 50vw !important;
  min-width: 1000px;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>ssc-sp-widget-itsm-daily-risk-review</id>
        <internal>false</internal>
        <link/>
        <name>SSC Daily Risk Review</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
		
var instanceURL = gs.getProperty('glide.servlet.uri');
console.log(instanceURL);
	
	//var myparm = getParmVal('sys_myparm');
	//console.log(myparm);

	
if (input) {
		
	if (input.flagToServerScriptToUpdateMiType == true){
           // console.log("I should update the MI Type of " + input.UpdateMiType_inc + "to " + input.UpdateMiType_newVal); 
		var grMiTypeUpdate = new GlideRecord('incident');
		grMiTypeUpdate.get(input.UpdateMiType_inc);
		//grMiTypeUpdate.u_mi_type = input.UpdateMiType_newVal;
		grMiTypeUpdate.setValue('u_mi_type', input.UpdateMiType_newVal);
		updateMiType = grMiTypeUpdate.update();
		if (updateMiType) {
    console.log(grMiTypeUpdate.getElement('u_mi_type'));
		} else {console.log("error");}
	}
	}
	
	var current_gdt = new GlideDateTime().getDate().getValue();
	var enddate = new GlideDateTime(current_gdt + " 06:00:00");

	var startdate = new GlideDateTime(enddate);
	//console.log(startdate);
	if (enddate.getDayOfWeekLocalTime() == 1) {
		startdate.addDaysLocalTime(-3);
		//console.log(startdate);
	} else { 
		startdate.addDaysLocalTime(-1);
	}

	
	data.openIncident = [];
	data.resolvedIncident =[];
	var grIncident = new GlideRecord('incident');
	// change to MI=true, state not closed
	grIncident.addEncodedQuery('u_qs_major_incident=true^state!=7');
	grIncident.query();	

	while (grIncident.next()) {		
		var openIncidents = {};
		var resolvedIncidents = {};
		if(grIncident.state == 6 ){
			//console.log(grIncident.problem_id.short_description);
			resolvedIncidents.number = grIncident.getDisplayValue('number');
			resolvedIncidents.sys_id = grIncident.getUniqueValue();
			resolvedIncidents.problem = grIncident.getDisplayValue('problem_id.number');
			resolvedIncidents.problem_description = grIncident.getDisplayValue('problem_id.description');
			resolvedIncidents.miType = grIncident.getValue('u_mi_type');
			resolvedIncidents.miType_newVal = grIncident.getValue('u_mi_type');
			resolvedIncidents.problem_id = grIncident.getValue('problem_id');
			
			var problemForm = $sp.getForm("problem", resolvedIncidents.problem_id,'', 'problem');
			data.pbmFormView = problemForm._view;
			data.pbmFormModel = problemForm._fields;
			resolvedIncidents.problem_model = [];	// declaring new array for field model for sp-editable directive

			for (var j = 0; j < data.pbmFormView.length; j++) {
				if (data.pbmFormView[j].name == 'description')
					resolvedIncidents.problem_model.push(data.pbmFormModel[data.pbmFormView[j].name]);
			}
			
			data.resolvedIncident.push(resolvedIncidents);			
		} else if(grIncident.state != 6) {
			openIncidents.number = grIncident.getDisplayValue('number');
			openIncidents.sys_id = grIncident.getUniqueValue();
			openIncidents.problem = grIncident.getDisplayValue('problem_id');
			openIncidents.problem_sys_id = grIncident.getValue('problem_id');
			openIncidents.description = grIncident.getDisplayValue('description');
			openIncidents.miType = grIncident.getValue('u_mi_type');
			openIncidents.miType_newVal = grIncident.getValue('u_mi_type');
			data.openIncident.push(openIncidents);
		}
	}	

	/* if (input) {
		
	if (input.flagToServerScriptToUpdateMiType == true){
           // console.log("I should update the MI Type of " + input.UpdateMiType_inc + "to " + input.UpdateMiType_newVal); 
		var grMiTypeUpdate = new GlideRecord('incident');
		grMiTypeUpdate.get(input.UpdateMiType_inc);
		//grMiTypeUpdate.u_mi_type = input.UpdateMiType_newVal;
		grMiTypeUpdate.setValue('u_mi_type', input.UpdateMiType_newVal);
		updateMiType = grMiTypeUpdate.update();
		if (updateMiType) {
    console.log(grMiTypeUpdate.getElement('u_mi_type'));
		} else {console.log("error");}
	}
	}
	//New Query
	var current_gdt = new GlideDateTime().getDate().getValue();
	var enddate = new GlideDateTime(current_gdt + " 06:00:00");

	var startdate = new GlideDateTime(enddate);
	//console.log(startdate);
	if (enddate.getDayOfWeekLocalTime() == 1) {
		startdate.addDaysLocalTime(-3);
		//console.log(startdate);
	} else { 
		startdate.addDaysLocalTime(-1);
	}

data.incidents = [];
var gri = new GlideRecord('incident');
//var queryString = "active=true^u_qs_major_incident=true^state!=6^ORstate!=7^sys_created_on>javascript:gs.dateGenerate('2018-07-16','06:00:00')";
gri.addQuery('active',true);			
//gri.addQuery('sys_created_on', ">", startdate);		// created on should be greater than yest 6 am
gri.addQuery('state','NOT IN','6,7');				// state should not be in closed or resolved		
//q1.addOrCondition('resolved_at', '>', enddate);					// but resolved time should be greater than today 6am 
gri.addQuery('u_qs_major_incident',true);
gri.query();
	
while (gri.next()) {	
	var incident = {};
	incident.number = gri.getDisplayValue('number');
	incident.sys_id = gri.getDisplayValue("sys_id");
	//console.log(incident.sys_id);
	incident.description = gri.getDisplayValue('description');
	incident.mitype = gri.getValue('u_mi_type');
	
	var incidentForm = $sp.getForm("incident", incident.sys_id,'','problem');
	data.incFormView = incidentForm._view;
	data.incFormModel = incidentForm._fields;
	incident.model = [];
	
	for (var i = 0; i < data.incFormView.length; i++) {
		if (data.incFormView[i].name == 'description')
			incident.model.push(data.incFormModel[data.incFormView[i].name]);
	}
	data.incidents.push(incident);
}

	
	data.problems = [];
	var gr = new GlideRecord('problem');
	gr.addActiveQuery();
	gr.setLimit(20);
	gr.orderByDesc('sys_updated_on');
	gr.addQuery('u_opened_by_group', 'IN','5408d3a8db200b40047dd7795e9619b5');
	gr.query();
	
while (gr.next()) {
	var problem = {};
	problem.number = gr.getDisplayValue('number');
	problem.sys_id = gr.getValue('sys_id');
	problem.description = gr.getDisplayValue('description');
	var inc_gr = new GlideRecord('incident');
	inc_gr.addQuery('problem_id', gr.getUniqueValue());
	inc_gr.setLimit(20);
	inc_gr.orderBy('sys_updated_on');
	inc_gr.query();
	while (inc_gr.next()) {
	problem.mitype = inc_gr.getValue('u_mi_type');
	problem.mitype_newVal = inc_gr.getValue('u_mi_type');
	problem.inc_number = inc_gr.getValue('number');
	problem.inc_sys_id = inc_gr.getUniqueValue();
	}
	
	
	var problemForm = $sp.getForm("problem", problem.sys_id,'', 'problem');
	data.pbmFormView = problemForm._view;
	data.pbmFormModel = problemForm._fields;
	problem.model = [];	
	
	for (var j = 0; j < data.pbmFormView.length; j++) {
		if (data.pbmFormView[j].name == 'description')
		problem.model.push(data.pbmFormModel[data.pbmFormView[j].name]);
	}
	data.problems.push(problem);
} */
	
	
	
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>e448614</sys_created_by>
        <sys_created_on>2018-07-18 21:53:41</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>acb0a443db1bdf4052fdd7795e961924</sys_id>
        <sys_mod_count>308</sys_mod_count>
        <sys_name>SSC Daily Risk Review</sys_name>
        <sys_package display_value="State Street IT Service Management" source="x_ibmss_ssc_itsm">2a92e67fdb071740544fdd0b5e9619d7</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="State Street IT Service Management">2a92e67fdb071740544fdd0b5e9619d7</sys_scope>
        <sys_update_name>sp_widget_acb0a443db1bdf4052fdd7795e961924</sys_update_name>
        <sys_updated_by>e654242</sys_updated_by>
        <sys_updated_on>2018-08-02 21:14:23</sys_updated_on>
        <template><![CDATA[<script>
  // Move this code to client script.
  function CallPrint(strid)
  {
    var prtContent = document.getElementById(strid);
    var WinPrint = window.open('','','left=0,top=0,width=700,height=500,toolbar=0,scrollbars=0,status=0');
    WinPrint.document.write(prtContent.innerHTML);
    WinPrint.document.close();
    WinPrint.focus();
    WinPrint.print();
    WinPrint.close();
    //prtContent.innerHTML=strOldOne;
  }
  function SendMail(strid)
  {
    var mailBody=document.getElementById(strid);
    var outlookApp = new ActiveXObject("Outlook.Application");
    var nameSpace = outlookApp.getNameSpace("MAPI");
    mailFolder = nameSpace.getDefaultFolder(6);
    mailItem = mailFolder.Items.add('IPM.Note.FormA');
    mailItem.Subject = "Daily IT Operations Risk Review";
    mailItem.To = "";
    mailItem.HTMLBody = mailBody.innerHTML;
    mailItem.display(0);  
  }
</script> <!-- Javascript code to print or email content of Div ID provided in function call -->
<div>
  <div id="printView" class="panel panel-body hidden">
    <style> 
      /* CSS Style has to be included inside of print view div to be rendered */ 
      .MyTable {
        border-collapse: collapse;
        width: 100%;
      }
      tr {
        background-color: grey;
        color:black; 
        font-size:12px;         
      }
      td, th {
        border: 1px solid black;
        padding: 8px;        
      }
      th {
        font: arial ;
        background-color:grey; 
      }
      .omi_th {
        color:red;
        background-color:white;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        text-align: left;
      }
      .omi_td {
        background-color:#e6b0aa; 
        text-align: center;
      }
      .rmi_th {
        color:brown;
        background-color:white;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        text-align: left;
      }
      .rmi_td {
        background-color:#f9e79f;
        text-align: center;
      }
      .qmi_th {
        color:#1f497d;
        background-color:white;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        text-align: left;
      }
      .qmi_td {
        background-color: white;

      }
      .pmi_th {
        color:brown;
        background-color:white;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        text-align: left;
      }
      .pmi_td {
        background-color: #d7bde2;
        text-align: center;
      }
    </style>
    <h1 style="text-align:center; color:blue">Displaying Major Incidents</h1>
    <!-- <pre>Sort by = {{orderField}}</pre> -->    
    <br/>
    <br/>
    <table class="MyTable">
      <col width="10%"> <col width="10%"> <col width="80%">
      <tr>
        <th width="10%">SLA Impact</th>
        <th width="10%">Open Risk</th>
       <!-- <th width="10%"><button ng-click="changeSort('inc_number')">Inc Number</button></th> -->
       <!-- <th width="10%">Number</th> -->
        <th width="80%"><button ng-click="changeSort('description')">Description</button></th>        
      </tr>  
      <tr> 
        <th class = "omi_th" colspan = "5">Open Major Incidents (MI) 
          <p class = "sub_text">[Discuss current status and any known or upcoming Service Level Impact. Cutoff: 6am EDT]</p>
        </th> 
      </tr>
      <tr ng-repeat = "openIncidents in data.openIncident | orderBy:orderField:orderReverse"> 
        <td class = "omi_td" style='color:red; font-size: 20px;'>&#x231B;</td> 
        <td class = "omi_td" style='color:red; font-size: 20px;'>&#10004;</td>
        <!-- <td class = "omi_td"> {{openIncidents.number}}  </td> -->
        <!-- <td class = "omi_td"> {{openIncidents.problem}} </td> -->
        <td class = "omi_td" style="text-align:left">({{openIncidents.number}} / {{openIncidents.problem}}) {{openIncidents.description}}   
        </td> 
      </tr>
      <tr> 
        <th class = "rmi_th" colspan = "5">Reportable Major Incidents (RMI)
          <p class = "sub_text">[Discuss Incident details, Service Level Impact and any Open Risk.]</p>
        </th> 
      </tr>
      <tr ng-repeat = "resolvedIncidents in data.resolvedIncident | filter: {miType: 'RMI'}:true | orderBy:orderField:orderReverse"> 
        <td class = "rmi_td" style='color:red; font-size: 20px;'>&#10004;</td>
        <td class = "rmi_td" style='color:red; font-size: 20px;'>&#10004;</td>
      <!--  <td class = "rmi_td"> {{resolvedIncidents.number}}  </td> -->
      <!--  <td class = "rmi_td"> {{resolvedIncidents.problem}} </td> -->
        <td class = "rmi_td" style="text-align:left">({{resolvedIncidents.number }} / {{resolvedIncidents.problem}})
          {{resolvedIncidents.problem_description}}
        </td>        
      </tr>
      <tr> 
        <th class="qmi_th" colspan = "5">Qualified Business Impacting Incidents (QMI)
          <p class = "sub_text">[Discuss Open Risk and any unidentified Service Level Impact.]</p>
        </th> 
      </tr>
      <tr ng-repeat = "resolvedIncidents in data.resolvedIncident | filter: {miType: 'QMI'}:true | orderBy:orderField"> 
        <td class = "qmi_td" style='color:green; font-size: 20px;'>&#x2718;</td>
        <td class = "qmi_td" style='color:red; font-size: 20px;'>&#10004;</td>
     <!--   <td class = "qmi_td"> {{resolvedIncidents.number}}  </td> -->
     <!--   <td class="qmi_td"> {{resolvedIncidents.problem}} </td> -->
        <td class="qmi_td" style="text-align:left">({{resolvedIncidents.number }} / {{resolvedIncidents.problem}})
          {{resolvedIncidents.problem_description}}
        </td>         
      </tr>
     <!--  <tr> 
        <th class="pmi_th" colspan = "5"> Process Major Incidents</th> 
      </tr>
      <tr ng-repeat = "resolvedIncidents in data.resolvedIncident | filter: {miType: 'PMI'}:true | orderBy:orderField"> 
        <td class = "pmi_td" style='color:green; font-size: 20px;'>&#x2718;</td>
        <td class = "pmi_td" style='color:green; font-size: 20px;'>&#x2718;</td>
        <td class = "pmi_td"> {{resolvedIncidents.number}}  </td> 
        <td class="pmi_td"> {{resolvedIncidents.problem}} </td>
        <td class="pmi_td" style="text-align:left">
          {{resolvedIncidents.problem_description}}
        </td>        
      </tr> -->
    </table>
    <h5> Definitions </h5>
    <p><span style="font-weight: bold"> Business Impact:</span> Any IT enterprise Service failure which was either visible to the business or a client, caused business users to apply a nonstandard workaround, or singularly impacted the timeline of a business function.</p>
    <p><span style="font-weight: bold"> Open Risk:</span> IT Service partially restored or remediated, leaving residual risk for additional business impact which is likely to recur. (e.g. Running on DR, Running without HA, Code Defect exists, manual workarounds in place)</p>
    <p><span style="font-weight: bold"> Reportable Major Incidents (RMI):</span> A Major Incident which resulted in a formal contractual client or regulatory Service Level Agreement (SLA) breach.</p>
    <p><span style="font-weight: bold"> Qualified Business Impacting Incidents (QMI):</span> A Major Incident with business impact but did not result in a formal contractual client or regulatory Service Level Agreement (SLA) breach.</p>
  
  </div> <!-- Print View - This is a hidden div that excludes inputs and code -->

  <div id="displayView" class="panel panel-body">    
    <h1 style="text-align:center; color:blue">Displaying Major Incidents</h1>
    <!-- <pre>Sort by = {{orderField}}</pre> -->    
    <br/>
    <br/>
    <table class="MyTable">
      <col width="10%"> <col width="10%"> <col width="70%"> <col width="10%">
      <tr>
        <th width="10%">SLA Impact</th>
        <th width="10%">Open Risk</th>
    <!--    <th width="9%"><button ng-click="changeSort('inc_number')">Inc Number</button></th> -->
    <!--    <th width="9%">Number</th> -->
        <th width="70%">Description</th>
        <th width="10%"ng-hide="!hidemi">MiType</th>
      </tr>  
      <tr> 
        <th class = "omi_th" colspan = "6">Open Major Incidents (MI) 
          <p class = "sub_text">[Discuss current status and any known or upcoming Service Level Impact. Cutoff: 6am EDT]</p>
        </th> 
      </tr>
      <tr ng-repeat = "openIncidents in data.openIncident | orderBy:orderField:orderReverse"> 
        <td class = "omi_td" style='color:red; font-size: 20px;'>&#x231B;</td> 
        <td class = "omi_td" style='color:red; font-size: 20px;'>&#10004;</td>
     <!--   <td class = "omi_td"> {{openIncidents.number}}  </td> -->
     <!--   <td class = "omi_td"> {{openIncidents.problem}} </td> -->
        <td class = "omi_td" style="text-align:left"><a ng-href="{{::instanceURL}}$sp.do?id=ssc_sp_problem_executive_summary&sys_id={{::openIncidents.problem_sys_id}}&sysparm_view=&sysparm_view_forced=true" title="{{openIncidents.problem}}" target="_blank">
            ({{openIncidents.number}} / {{openIncidents.problem}})
      </a> {{openIncidents.description}}
         <!-- <sp-editable-field                            
table="incident" 
editable-by-user="true"
table-id="incident.sys_id"
field-model="incident.model[0]"
on-change="titleOnChange" 
on-submit="titleOnSubmit">
</sp-editable-field> -->
        </td>
        <td ng-hide="!hidemi" class = "omi_td"> 
          <select class = "dropdown" ng-model="openIncidents.miType_newVal" field="mi_type_select">
            <option selected="selected">{{openIncidents.miType}}</option>
            <option value="RMI">RMI</option>
            <option value="QMI" >QMI</option>
            <option value="PMI">PMI</option>
          </select>
          <button ng-if="openIncidents.miType_newVal != openIncidents.miType" class="btn" ng-click="saveMitype(openIncidents.sys_id, openIncidents.miType_newVal)"> Save
          </button>

        </td>
      </tr>
      <tr> 
        <th class = "rmi_th" colspan = "6">Reportable Major Incidents (RMI)
          <p class = "sub_text">[Discuss Incident details, Service Level Impact and any Open Risk.]</p>
        </th> 
      </tr>
      <tr ng-repeat = "resolvedIncidents in data.resolvedIncident | filter: {miType: 'RMI'}:true | orderBy:orderField:orderReverse"> 
        <td class = "rmi_td" style='color:red; font-size: 20px;'>&#10004;</td>
        <td class = "rmi_td" style='color:red; font-size: 20px;'>&#10004;</td>
   <!--     <td class = "rmi_td"> {{resolvedIncidents.number}}  </td> -->
   <!--     <td class = "rmi_td"> {{resolvedIncidents.problem}} </td> -->
        <td class = "rmi_td" style="text-align:left"><a ng-href="?id=ssc_sp_problem_executive_summary&sys_id={{::resolvedIncidents.problem_id}}&sysparm_view=&sysparm_view_forced=true" title="{{resolvedIncidents.problem}}" target="_blank">
      ({{resolvedIncidents.number }} / {{resolvedIncidents.problem}})
      </a>
          <!-- {{problem.description}} -->
          <sp-editable-field 
                             table="problem" 
                             editable-by-user="true"
                             table-id="resolvedIncidents.problem_id"
                             field-model="resolvedIncidents.problem_model[0]"
                             on-change="titleOnChange" on-submit="titleOnSubmit">
          </sp-editable-field>
        </td>
        <td ng-hide="!hidemi" class = "rmi_td"> 
          <select class = "dropdown" ng-model="resolvedIncidents.miType_newVal" field="mi_type_select">
            <option selected="selected">{{resolvedIncidents.miType}}</option>
            <option value="RMI">RMI</option>
            <option value="QMI" >QMI</option>
            <option value="PMI">PMI</option>
          </select>
          <button ng-if="resolvedIncidents.miType_newVal != resolvedIncidents.miType" class="btn" ng-click="saveMitype(resolvedIncidents.sys_id, resolvedIncidents.miType_newVal)"> Save
          </button>
        </td>
      </tr>
      <tr> 
        <th class="qmi_th" colspan = "6">Qualified Business Impacting Incidents (QMI)
          <p class = "sub_text">[Discuss Open Risk and any unidentified Service Level Impact.]</p>
        </th> 
      </tr>
      <tr ng-repeat = "resolvedIncidents in data.resolvedIncident | filter: {miType: 'QMI'}:true | orderBy:orderField"> 
        <td class = "qmi_td" style='color:green; font-size: 20px;'>&#x2718;</td>
        <td class = "qmi_td" style='color:red; font-size: 20px;'>&#10004;</td>
     <!--   <td class = "qmi_td"> {{resolvedIncidents.number}}  </td> -->
     <!--   <td class="qmi_td"> {{resolvedIncidents.problem}} </td>   -->
        <td class="qmi_td" style="text-align:left"><a ng-href="?id=ssc_sp_problem_executive_summary&sys_id={{::resolvedIncidents.problem_id}}&sysparm_view=&sysparm_view_forced=true" title="{{resolvedIncidents.problem}}" target="_blank">
      ({{resolvedIncidents.number }} / {{resolvedIncidents.problem}})
      </a>
          <!-- {{problem.description}} -->
          <sp-editable-field 
                             table="problem" 
                             editable-by-user="true"
                             table-id="resolvedIncidents.problem_id"
                             field-model="resolvedIncidents.problem_model[0]"
                             on-change="titleOnChange" on-submit="titleOnSubmit">
          </sp-editable-field>
        </td> 
        <td ng-hide="!hidemi" class = "qmi_td"> 
          <select class = "dropdown" ng-model="resolvedIncidents.miType_newVal" field="mi_type_select">
            <option selected="selected">{{resolvedIncidents.miType}}</option>
            <option value="RMI">RMI</option>
            <option value="QMI" >QMI</option>
            <option value="PMI">PMI</option>
          </select>
          <button ng-if="resolvedIncidents.miType_newVal != resolvedIncidents.miType" class="btn" ng-click="saveMitype(resolvedIncidents.sys_id, resolvedIncidents.miType_newVal)"> Save
          </button>
        </td>
      </tr>
      <tr> 
        <th class="pmi_th" colspan = "6"> Process Major Incidents</th> 
      </tr>
      <tr ng-repeat = "resolvedIncidents in data.resolvedIncident | filter: {miType: 'PMI'}:true | orderBy:orderField"> 
        <td class = "pmi_td" style='color:green; font-size: 20px;'>&#x2718;</td>
        <td class = "pmi_td" style='color:green; font-size: 20px;'>&#x2718;</td>
    <!--    <td class = "pmi_td"> {{resolvedIncidents.number}}  </td> -->
     <!--   <td class="pmi_td"> {{resolvedIncidents.problem}} </td>    -->
        <td class="pmi_td" style="text-align:left"><a ng-href="?id=ssc_sp_problem_executive_summary&sys_id={{::resolvedIncidents.problem_id}}&sysparm_view=&sysparm_view_forced=true" title="{{resolvedIncidents.problem}}" target="_blank">
      ({{resolvedIncidents.number }} / {{resolvedIncidents.problem}})
      </a>
          <!-- {{problem.description}} -->
          <sp-editable-field 
                             table="problem" 
                             editable-by-user="true"
                             table-id="resolvedIncidents.problem_id"
                             field-model="resolvedIncidents.problem_model[0]"
                             on-change="titleOnChange" on-submit="titleOnSubmit">
          </sp-editable-field>
        </td>
        <td ng-hide="!hidemi" class = "pmi_td"> 
          <select class = "dropdown" ng-model="resolvedIncidents.miType_newVal" field="mi_type_select">
            <option selected="selected">{{resolvedIncidents.miType}}</option>
            <option value="RMI">RMI</option>
            <option value="QMI" >QMI</option>
            <option value="PMI">PMI</option>
          </select>
          <button ng-if="resolvedIncidents.miType_newVal != resolvedIncidents.miType" class="btn" ng-click="saveMitype(resolvedIncidents.sys_id, resolvedIncidents.miType_newVal)"> Save
          </button>
        </td>
      </tr>
    </table>
  </div> <!-- Display View - This is the div that is rendered in the browser -->
  
  <div class="cardfooter">
    <span style="float:right; margin: 0 10px 10px 0"><input type="checkbox" ng-model="hidemi"/> Edit Mode</span>
    <input type="button" value="Print Report" onClick="javascript:CallPrint('printView');">
    <input type="button" value="Send Report As Email" onClick="javascript:SendMail('printView');">
    <h5> Definitions </h5>
    <p><span style="font-weight: bold"> Business Impact:</span> Any IT enterprise Service failure which was either visible to the business or a client, caused business users to apply a nonstandard workaround, or singularly impacted the timeline of a business function.</p>
    <p><span style="font-weight: bold"> Open Risk:</span> IT Service partially restored or remediated, leaving residual risk for additional business impact which is likely to recur. (e.g. Running on DR, Running without HA, Code Defect exists, manual workarounds in place)</p>
    <p><span style="font-weight: bold"> Reportable Major Incidents (RMI):</span> A Major Incident which resulted in a formal contractual client or regulatory Service Level Agreement (SLA) breach.</p>
    <p><span style="font-weight: bold"> Qualified Business Impacting Incidents (QMI):</span> A Major Incident with business impact but did not result in a formal contractual client or regulatory Service Level Agreement (SLA) breach.</p>
  </div> <!-- Card Footer -->

</div> <!-- Main Div -->]]></template>
    </sp_widget>
</record_update>
