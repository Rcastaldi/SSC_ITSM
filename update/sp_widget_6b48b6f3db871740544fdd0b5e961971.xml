<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category/>
        <client_script><![CDATA[function($scope, $rootScope, spUtil, $location, spModal) {
	/* widget controller */
	var c = this;
	var shared = {};	

	$rootScope.$on("$locationChangeSuccess", function(name, data) {
	console.log("function is working")
	var searchObject = $location.search();
	console.log(searchObject);
	
	$scope.data.sys_id = searchObject.sys_id || searchObject.sl_sys_id;
	console.log($scope.data.sys_id);
	console.log("Log completed")
	spUtil.update($scope);
	//c.server.uodate();
	})
	
	$scope.$on('data_table.click', function(event,obj) {
		//console.log(obj);
		var link = {};
		link.sys_id = obj.sys_id;
		link.table = obj.table;
		link.id = c.data.page;
		//$location.search(link);
		c.OpenTicketModal(link.table, link.sys_id);
	})
	
	c.OpenTicketModal = function(targetTable, targetSysId){
		// shared.problems = c.data.problems;
		// Modal for custom filters
		console.log(targetTable);
		console.log(targetSysId);
		shared.sys_id = targetSysId;
		shared.table = targetTable;
		spModal.open({
			//spModal.open will open a modal, and we'll pass it the following parameters
			size: 'lg',
			title: 'Ticket Form',
			widgetInput: { 
				table: targetTable,
				sys_id:targetSysId
			},
			widget: 'ssc-sp-widget-enhanced-form', //Insert sys_id of the embedded widget
			buttons: [ {label:'${Finished}', primary: true} ],			
			shared: shared //We make the 'shared' array available to modal's embedded widget
		}).then(function() {
			//This function is triggered by submitting/closing the modal.
			console.log(shared);
			//$scope.data.returned_search = shared.problems_search;
			//$scope.CurrentActiveFilter = "custom";
			//c.server.update();
		});
	};
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.comment {&#13;
  font-weight: bold;&#13;
  margin-top: 2px;&#13;
  margin-bottom: 2px;&#13;
}&#13;
.mce-panel, .mce-btn {&#13;
  background-image: none;&#13;
  background-color: #f0f3f4;&#13;
}&#13;
&#13;
.action-btn {&#13;
  margin-right: 5px;&#13;
}&#13;
&#13;
.timeline-container {&#13;
  max-height: 50vh;&#13;
  height: 100%;&#13;
  overflow-y: auto;  &#13;
}&#13;
&#13;
.panel .panel {&#13;
  height: auto !important;&#13;
}&#13;
&#13;
.attachment-button {&#13;
  .glyphicon-paperclip {&#13;
    font-size: 18px;&#13;
  }&#13;
}&#13;
&#13;
.empty-state-wrapper {&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  align-items: center;&#13;
  display: flex;&#13;
  flex-direction: column;&#13;
  padding: 10vh 20px 20px;&#13;
&#13;
  .empty-state {&#13;
    border: 1px solid #e7e9eb;&#13;
    border-radius: 10px;&#13;
    max-width: 700px;&#13;
    padding: 30px 40px 20px;&#13;
    position: relative;&#13;
&#13;
    .empty-state-badge {&#13;
      top: -36px;&#13;
      left: 50%;&#13;
      position: absolute;&#13;
      height: 72px;&#13;
      width: 72px;&#13;
      -webkit-align-items: center;&#13;
      -ms-flex-align: center;&#13;
      align-items: center;&#13;
      border-radius: 100%;&#13;
      color: #ffffff;&#13;
      display: -webkit-flex;&#13;
      display: -ms-flexbox;&#13;
      display: flex;&#13;
      font-size: 40px;&#13;
      -webkit-justify-content: center;&#13;
      -ms-flex-pack: center;&#13;
      justify-content: center;&#13;
      margin-left: -36px;&#13;
      text-align: center;&#13;
    }&#13;
&#13;
    .empty-state-header {&#13;
      font-size: 30px;&#13;
      text-align: center;&#13;
      color: #343d47;&#13;
    }&#13;
&#13;
    .empty-state-content {&#13;
      ul {&#13;
        list-style: disc outside;&#13;
        margin: 0 0 10px 0;&#13;
        padding: 0 0 0 30px;&#13;
      }&#13;
    }&#13;
  }&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Widget that displays all the related lists embedded in multiple data-table-widgets selected via a nav-tab menu. The table and sys_id of the record must by provided as URL parameters.</description>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ssc-sp-widget-form-related-lists</id>
        <internal>false</internal>
        <link/>
        <name>SSC Enhanced Form Related Lists</name>
        <option_schema>[{"displayValue":"Page","name":"page","label":"Page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[/*
Copyright (c) 2017 NewRocket, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

(function() {

	data.f = {};
	if (input) {
		data.table = input.table;
		data.sys_id = input.sys_id;
		data.view = input.view;
		data.query = input.query;
		}
	else {
	
		data.table = $sp.getParameter("t") || $sp.getParameter("table") || $sp.getParameter("sl_table") || options.table;
		data.sys_id = $sp.getParameter("sys_id") || $sp.getParameter("sl_sys_id") || options.sys_id;
		data.view = $sp.getParameter("v") || $sp.getParameter("view") || options.view || 'problem';  // problem is default
		data.query = $sp.getParameter("query") || options.query;
	 }

	//if (!data.table || !data.sys_id)
	//	return;

	var f = $sp.getForm(data.table, data.sys_id, data.query, data.view);
	data.related_lists = f._related_lists;

//console.log (data.related_lists);
	
	for (var i in data.related_lists) {
		var list = data.related_lists[i];
		//console.log(i + " - " + list.table);
		if (list.table == 'task_sla' || list.table == 'sys_attachment') {
			data.related_lists.splice(i,1);
			//console.log("Spliced " + i + " - " + list.table)
		}
		var params = {
			table: list.table, 
			filter: list.field+"="+data.sys_id,
			view: 'sp',
			show_new: true,
			show_keywords: true,
			title: list.label
		};

		if (options.page) {
			var page = new GlideRecord('sp_page');
			if (page.get(options.page))
				data.page = page.getDisplayValue('id');
		}
		if (!data.page) {
			data.page = "form";	
		}

		list.widget = $sp.getWidget('widget-data-table', params);
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>e448614</sys_created_by>
        <sys_created_on>2018-07-09 06:35:49</sys_created_on>
        <sys_id>6b48b6f3db871740544fdd0b5e961971</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>SSC Enhanced Form Related Lists</sys_name>
        <sys_package display_value="State Street IT Service Management" source="x_ibmss_ssc_itsm">2a92e67fdb071740544fdd0b5e9619d7</sys_package>
        <sys_policy/>
        <sys_scope display_value="State Street IT Service Management">2a92e67fdb071740544fdd0b5e9619d7</sys_scope>
        <sys_update_name>sp_widget_6b48b6f3db871740544fdd0b5e961971</sys_update_name>
        <sys_updated_by>e448614</sys_updated_by>
        <sys_updated_on>2018-07-26 01:33:21</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" ng-if="data.related_lists.length > 0">
  <div class="panel-body">

    <ul class="nav nav-tabs" role="tablist">
      <li role="presentation" ng-class='{active:$first}' ng-repeat="list in data.related_lists | filter: !{ table : 'sys_attachment'} ">
        <a data-target="#{{list.table}}" aria-controls="{{list.table}}" role="tab" ng-class='{active:$first}' data-toggle="tab">
          {{list.label}}
          <span class="label label-as-badge label-primary" ng-if="list.count">{{list.count}}</span>
        </a>
      </li>
    </ul>

    <div class="tab-content">
      <div role="tabpanel" class="tab-pane" id="{{list.table}}" ng-class='{active:$first}' ng-repeat="list in data.related_lists">

        <div style="margin-top: -1px;">
          <div class="alert alert-danger" ng-if="data.invalid_table">
            Table not defined '{{data.table_label}}'
          </div>
          <sp-widget widget="list.widget"></sp-widget>
        </div>

      </div>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
